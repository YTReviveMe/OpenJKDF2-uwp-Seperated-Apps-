set(SDL_ROOT ${CMAKE_BINARY_DIR}/SDL)

# *Replicate* variables generated by `FindSDL`
set(SDL_FOUND TRUE)
set(SDL_INCLUDE_DIRS ${SDL_ROOT}/include/SDL2)
if(PLAT_MSVC)
    set(SDL_LIBRARIES ${SDL_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}SDL2${CMAKE_STATIC_LIBRARY_SUFFIX})
else()
    set(SDL_LIBRARIES ${SDL_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}SDL2${CMAKE_STATIC_LIBRARY_SUFFIX})
endif()
set(SDL_VERSION 2.26.5)
string(REGEX MATCH "^[0-9]+" SDL_VERSION_MAJOR ${SDL_VERSION})
string(REGEX REPLACE "^[0-9]+\\.([0-9]+).*" "\\1" SDL_VERSION_MINOR ${SDL_VERSION})
string(REGEX REPLACE "^[0-9]+\\.[0-9]+\\.([0-9]+).*" "\\1" SDL_VERSION_PATCH ${SDL_VERSION})
message(SDL_VERSION_MAJOR\ ==\ ${SDL_VERSION_MAJOR})
message(SDL_VERSION_MINOR\ ==\ ${SDL_VERSION_MINOR})
message(SDL_VERSION_PATCH\ ==\ ${SDL_VERSION_PATCH})

if(TARGET_ANDROID)
set(SDL_HIDAPI FALSE)
else()
set(SDL_HIDAPI TRUE)
endif()

ExternalProject_Add(
    SDL
    SOURCE_DIR          C:/dev/hdr/SDL-uwp-gl
    BINARY_DIR          ${SDL_ROOT}
    INSTALL_DIR         ${SDL_ROOT}
    UPDATE_DISCONNECTED TRUE
    CMAKE_ARGS          --toolchain ${CMAKE_TOOLCHAIN_FILE}
                        --install-prefix ${SDL_ROOT}
                        -DCMAKE_BUILD_TYPE:STRING=Release
                        -DCMAKE_OSX_ARCHITECTURES=${CMAKE_OSX_ARCHITECTURES}
			-DSDL_SHARED:BOOL=TRUE
			-DSDL_STATIC:BOOL=FALSE
                        -DSDL_TEST:BOOL=FALSE
                        -DSDL_HIDAPI:BOOL=${SDL_HIDAPI}
    BUILD_BYPRODUCTS    ${SDL_LIBRARIES}
)

# *Replicate* SDL target
if(NOT TARGET SDL::SDL)
    add_library(SDL::SDL STATIC IMPORTED)
endif()
add_dependencies(SDL::SDL SDL)
file(MAKE_DIRECTORY ${SDL_INCLUDE_DIRS})
set_target_properties(
    SDL::SDL PROPERTIES
    IMPORTED_LOCATION ${SDL_LIBRARIES}
    IMPORTED_IMPLIB ${SDL_LIBRARIES}
)
target_include_directories(SDL::SDL INTERFACE ${SDL_INCLUDE_DIRS})
target_link_directories(SDL::SDL INTERFACE ${SDL_ROOT}/lib)

set(SDL2_LIBRARY ${SDL_ROOT}/lib)
set(SDL2_INCLUDE_DIR ${SDL_INCLUDE_DIRS})

# TODO why doesn't this work?
#if(TARGET_MACOS)
#    set(SDL_MACOS_FRAMEWORKS "-framework CoreAudio -framework Cocoa")
#    target_link_libraries(SDL::SDL INTERFACE ${SDL_MACOS_FRAMEWORKS})
#endif()
